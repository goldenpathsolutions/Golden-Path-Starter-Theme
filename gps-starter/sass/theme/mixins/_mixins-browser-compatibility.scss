/*
 * Mixins for browser compatibility
 *
 * Most of these mixins just simplify code by adding all the prefixed versions of styles, allowing us to use a single
 * line of code to make our styles cross-browser-compatible.
 */

// Flexbox --------------------------------------------------------------------------
@mixin flex-container(  $direction: row,
                        $wrap: nowrap,
                        $justify: flex-start,
                        $align-items: stretch,
                        $align-content: stretch,
                        $is_inline: false) {

  @if ($is_inline) {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
  } @else {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
  }

  -webkit-flex-direction: $direction;
  -moz-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;

  -webkit-flex-wrap: $wrap;
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;

  -webkit-justify-content: $justify;
  -moz-justify-content: $justify;
  -ms-justify-content: $justify;
  justify-content: $justify;
  -ms-flex-pack: $justify;

  @if ($justify == 'flex-end') {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
  }
  @if ($justify == 'flex-start') {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
  }

  -webkit-align-items: $align-items;
  -moz-align-items: $align-items;
  -ms-align-items: $align-items;
  align-items: $align-items;

  -webkit-align-content: $align-content;
  -moz-align-content: $align-content;
  -ms-align-content: $align-content;
  align-content: $align-content;
}

// --------------------------------------------------
// Flexbox SASS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// --------------------------------------------------

// Flexbox display
@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex: $values;
  -webkit-flex: $values;
  -ms-flex: $values;
  flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
  -moz-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
  -moz-flex-wrap: $wrap;
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
  -moz-flex-flow: $flow;
  -ms-flex-flow: $flow;
  flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
  -moz-flex-grow: $grow;
  -ms-flex-grow: $grow;
  flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink) {
  -webkit-flex-shrink: $shrink;
  -moz-flex-shrink: $shrink;
  -ms-flex-shrink: $shrink;
  flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
  -moz-flex-basis: $width;
  -ms-flex-basis: $width;
  flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
  -moz-justify-content: $justify;
  -ms-justify-content: $justify;
  justify-content: $justify;
  -ms-flex-pack: $justify;

  @if ($justify == 'flex-end') {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
  }

  @if ($justify == 'flex-start') {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
  }
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align) {
  -webkit-align-content: $align;
  -moz-align-content: $align;
  -ms-align-content: $align;
  align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
  -webkit-align-items: $align;
  -moz-align-items: $align;
  -ms-align-items: $align;
  align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
  -webkit-align-self: $align;
  -moz-align-self: $align;
  -ms-align-self: $align;
  align-self: $align;
}


// Transition -----------------------------------------------------------------------
@mixin transition( $transition... ) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

// Transform -----------------------------------------------------------------------
@mixin transform( $transform... ) {
  -webkit-transform: $transform;
  -ms-transform: $transform;
  transform: $transform;
}

// Box-Shadow ----------------------------------------------------------------------
@mixin box-shadow( $shadow ) {
  -webkit-box-shadow: $shadow;
  box-shadow: $shadow;
}

// Box-Sizing ----------------------------------------------------------------------
@mixin box-sizing( $sizing ) {
  -webkit-box-sizing: $sizing;
  -moz-box-sizing: $sizing;
  box-sizing: $sizing;
}


// Background Image & Image Set -------------------------------------------------------
@mixin background-image( $small-image, $large-image ) {
  background-image: url('#{$small-image}');
  background-image: -webkit-image-set(
                  "#{$small-image}" 1x,
                  "#{$large-image}" 2x
  );
  background-image: image-set(
                  "#{$small-image}" 1x,
                  "#{$large-image}" 2x
  );
}


// Animation -----------------------------------------------------------------------------
@mixin animation( $animation ) {
  -webkit-animation: $animation;
  -moz-animation: $animation;
  -o-animation: $animation;
  animation: $animation;
}

@mixin keyframes( $animationName ) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

@mixin transform-origin( $values ) {
  -webkit-transform-origin: $values;
  -moz-transform-origin: $values;
  -ms-transform-origin: $values;
  -o-transform-origin: $values;
  transform-origin: $values;
}

// Border-radius -----------------------------------------------------------------------------
@mixin border-radius( $values ) {
  -moz-border-radius: $values;
  -webkit-border-radius: $values;
  border-radius: $values;
}

// appearance -----------------------------------------------------------------------------
@mixin appearance( $value ){
  -webkit-appearance: $value;
  -moz-appearance: $value;
  appearance: $value;
}

// Placeholder -----------------------------------------------------------------------------
@mixin optional-at-root($sel) {
  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
    @content;
  }
}

@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') {
    @content;
  }

  @include optional-at-root(':-moz-placeholder') {
    @content;
  }

  @include optional-at-root('::-moz-placeholder') {
    @content;
  }

  @include optional-at-root(':-ms-input-placeholder') {
    @content;
  }
}